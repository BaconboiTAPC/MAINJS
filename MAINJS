javascjavascript:(function () {
    // Show popup message before running the script
    alert("HAVE FUN ENJOYING MY SCRIPT AND UNLOCK ALL OF THE CRAFTS OF CRAFTS ↓\ncredited by BACONBOI ♡");

    console.log("🚀 Infinite Craft Auto-Combiner (Efficient Item Tracker) Activated!");

    let combinationCount = 0;
    let running = false;
    let interval = null;
    let totalItems = 0;
    let craftedItems = 0;

    // Create GUI
    function createGUI() {
        const gui = document.createElement("div");
        gui.style.position = "fixed";
        gui.style.top = "10px";
        gui.style.left = "10px"; // Changed to left side
        gui.style.padding = "10px";
        gui.style.background = "rgba(0, 0, 0, 0.8)";
        gui.style.color = "white";
        gui.style.borderRadius = "10px";
        gui.style.fontFamily = "Arial, sans-serif";
        gui.style.zIndex = "9999";
        gui.style.display = "flex";
        gui.style.flexDirection = "column";
        gui.style.gap = "10px";

        // Start/Stop Button
        const startButton = document.createElement("button");
        startButton.innerText = "Start Auto-Crafter";
        startButton.style.padding = "10px";
        startButton.style.fontSize = "14px";
        startButton.style.cursor = "pointer";
        startButton.style.border = "none";
        startButton.style.borderRadius = "5px";
        startButton.style.background = "green";
        startButton.style.color = "white";
        startButton.onclick = function () {
            running = !running;
            if (running) {
                startButton.innerText = "Stop Auto-Crafter";
                startButton.style.background = "red";
                startAutoCrafting();
            } else {
                startButton.innerText = "Start Auto-Crafter";
                startButton.style.background = "green";
                stopAutoCrafting();
            }
        };

        // Instant Clear Button
        const clearButton = document.createElement("button");
        clearButton.innerText = "Clear Items Instantly";
        clearButton.style.padding = "10px";
        clearButton.style.fontSize = "14px";
        clearButton.style.cursor = "pointer";
        clearButton.style.border = "none";
        clearButton.style.borderRadius = "5px";
        clearButton.style.background = "blue";
        clearButton.style.color = "white";
        clearButton.onclick = function () {
            clearCanvas();
        };

        // Items Crafted Display
        const statusDisplay = document.createElement("div");
        statusDisplay.style.color = "white";
        statusDisplay.style.fontSize = "16px";
        statusDisplay.innerHTML = `
            <p>Crafted: <span id="craftedCount">0</span> / 3,470,353+</p>
        `;

        // Add arrow and credited by text
        const arrowDiv = document.createElement("div");
        arrowDiv.style.fontSize = "30px";
        arrowDiv.innerHTML = "↓"; // Down arrow symbol

        const creditedByDiv = document.createElement("div");
        creditedByDiv.style.fontSize = "14px";
        creditedByDiv.style.fontStyle = "italic";
        creditedByDiv.innerHTML = "credited by BACONBOI ♡";

        // Create the SoundCloud embeds for the songs
        const song1 = document.createElement("div");
        song1.innerHTML = `
            <iframe width="100%" height="300" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/1489983991&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true"></iframe>
            <div style="font-size: 10px; color: #cccccc;">
                <a href="https://soundcloud.com/phonkmp3" title="PHONK.MP3" target="_blank" style="color: #cccccc; text-decoration: none;">PHONK.MP3</a> · 
                <a href="https://soundcloud.com/phonkmp3/on-the-jacket" title="ON THE JACKET" target="_blank" style="color: #cccccc; text-decoration: none;">ON THE JACKET</a>
            </div>
        `;
        const song2 = document.createElement("div");
        song2.innerHTML = `
            <iframe width="100%" height="300" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/1938613391&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true"></iframe>
            <div style="font-size: 10px; color: #cccccc;">
                <a href="https://soundcloud.com/jair-zubizarreta" title="Jair Zubizarreta" target="_blank" style="color: #cccccc; text-decoration: none;">Jair Zubizarreta</a> · 
                <a href="https://soundcloud.com/jair-zubizarreta/chisme-phonk-x-o-melhor-no-que" title="Chisme Phonk x O Melhor no Que Faz 3.0 (Full TikTok Remix) [made by purple drip boy].mp3" target="_blank" style="color: #cccccc; text-decoration: none;">Chisme Phonk x O Melhor no Que Faz 3.0 (Full TikTok Remix) [made by purple drip boy].mp3</a>
            </div>
        `;
        const song3 = document.createElement("div");
        song3.innerHTML = `
            <iframe width="100%" height="300" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/1826472747&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true"></iframe>
            <div style="font-size: 10px; color: #cccccc;">
                <a href="https://soundcloud.com/tio-sam-858658914" title="Tio sam" target="_blank" style="color: #cccccc; text-decoration: none;">Tio sam</a> · 
                <a href="https://soundcloud.com/tio-sam-858658914/phonk-ultra-vol-2-320-mp3" title="Phonk Ultra Vol 2 (320).mp3" target="_blank" style="color: #cccccc; text-decoration: none;">Phonk Ultra Vol 2 (320).mp3</a>
            </div>
        `;

        // Store the songs in an array
        const songs = [song1, song2, song3];
        let currentSongIndex = 0;

        // Create song switching buttons (left & right arrows)
        const switchLeftButton = document.createElement("button");
        switchLeftButton.innerText = "<";
        switchLeftButton.style.padding = "5px 10px";
        switchLeftButton.style.fontSize = "18px";
        switchLeftButton.style.cursor = "pointer";
        switchLeftButton.style.border = "none";
        switchLeftButton.style.background = "transparent";
        switchLeftButton.style.color = "white";
        switchLeftButton.onclick = function () {
            currentSongIndex = (currentSongIndex - 1 + songs.length) % songs.length;
            updateSong();
        };

        const switchRightButton = document.createElement("button");
        switchRightButton.innerText = ">";
        switchRightButton.style.padding = "5px 10px";
        switchRightButton.style.fontSize = "18px";
        switchRightButton.style.cursor = "pointer";
        switchRightButton.style.border = "none";
        switchRightButton.style.background = "transparent";
        switchRightButton.style.color = "white";
        switchRightButton.onclick = function () {
            currentSongIndex = (currentSongIndex + 1) % songs.length;
            updateSong();
        };

        // Function to update the displayed song
        function updateSong() {
            const songContainer = document.getElementById("songContainer");
            songContainer.innerHTML = "";
            songContainer.appendChild(songs[currentSongIndex]);
        }

        // Song container for dynamic updating
        const songContainer = document.createElement("div");
        songContainer.id = "songContainer";
        songContainer.appendChild(songs[currentSongIndex]);

        // Append all elements to the GUI
        gui.appendChild(songContainer);
        gui.appendChild(switchLeftButton);
        gui.appendChild(switchRightButton);
        gui.appendChild(startButton);
        gui.appendChild(clearButton);
        gui.appendChild(statusDisplay);
        gui.appendChild(arrowDiv);
        gui.appendChild(creditedByDiv);

        document.body.appendChild(gui);
    }

    function getDraggableItems() {
        return Array.from(document.querySelectorAll('.item'));
    }

    function getCraftingPosition() {
        const screenWidth = window.innerWidth;
        const screenHeight = window.innerHeight;
        return { x: screenWidth / 2, y: screenHeight / 2 };
    }

    function simulateDragAndDrop(item, targetX, targetY) {
        const rect = item.getBoundingClientRect();
        const startX = rect.left + rect.width / 2;
        const startY = rect.top + rect.height / 2;
        item.dispatchEvent(new MouseEvent('mousedown', { bubbles: true, clientX: startX, clientY: startY }));
        document.dispatchEvent(new MouseEvent('mousemove', { bubbles: true, clientX: targetX, clientY: targetY }));
        document.dispatchEvent(new MouseEvent('mouseup', { bubbles: true, clientX: targetX, clientY: targetY }));
        console.log(`🔄 Moved item to (${targetX}, ${targetY})`);
    }

    function clearCanvas() {
        console.log("🧹 Clicking 'Clear All Items on the Canvas'...");
        const clearButton = [...document.querySelectorAll('button')].find(btn => btn.innerText.includes("Clear"));
        if (clearButton) {
            clearButton.click();
            console.log("🖤 Clicked Clear button!");
            setTimeout(() => {
                const yesButton = [...document.querySelectorAll('button')].find(btn => btn.innerText.includes("Yes"));
                if (yesButton) {
                    yesButton.click();
                    console.log("✅ Confirmed 'Yes' to clear canvas!");
                }
            }, 100);
        }
        combinationCount = 0; // Reset counter
        updateStatus();
    }

    function updateStatus() {
        document.getElementById("craftedCount").innerText = craftedItems;
    }

    function autoCombine() {
        if (!running) return;
        const items = getDraggableItems();
        totalItems = items.length;
        if (items.length < 2) {
            console.warn("⚠️ Not enough items to combine!");
            return;
        }
        const center = getCraftingPosition();

        items.slice(0, 5).forEach(item => {
            simulateDragAndDrop(item, center.x, center.y);
            craftedItems++;
            if (craftedItems >= 40) {
                clearCanvas(); // Auto-clear after 40 crafts
            }
            updateStatus(); // Update the item status
        });
    }

    function startAutoCrafting() {
        if (!interval) {
            interval = setInterval(autoCombine, 100); // 1 item per 100ms (0.100 seconds)
        }
    }

    function stopAutoCrafting() {
        clearInterval(interval);
        interval = null;
    }

    createGUI();
})();

